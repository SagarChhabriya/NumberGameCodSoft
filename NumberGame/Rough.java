/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package codsoft.NumberGame;
import java.util.Random;
import javax.swing.JOptionPane;

/**
 *
 * @author Mr Sagar Kumar
 */
public class Rough extends javax.swing.JFrame {

    /**
     * Creates new form Rough
     */
     Random rand = new Random();
    int random = rand.nextInt(0, 100);
    
    static int called=0;
    public Rough() {
        initComponents();
    }
    
        void playAgain()
        {
             
              this.dispose();
              new Rough().setVisible(true);
        }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        Histogram1 = new javax.swing.JPanel();
        Histogram2 = new javax.swing.JPanel();
        Histogram3 = new javax.swing.JPanel();
        Histogram4 = new javax.swing.JPanel();
        Histogram5 = new javax.swing.JPanel();
        Histogram6 = new javax.swing.JPanel();
        Histogram7 = new javax.swing.JPanel();
        Histogram8 = new javax.swing.JPanel();
        Histogram9 = new javax.swing.JPanel();
        Histogram10 = new javax.swing.JPanel();
        CheckButton = new javax.swing.JButton();
        OutputLabel = new javax.swing.JLabel();
        NumberLabel = new javax.swing.JLabel();
        GuessedNumberTextField = new javax.swing.JTextField();
        Element1 = new javax.swing.JLabel();
        Element2 = new javax.swing.JLabel();
        Element3 = new javax.swing.JLabel();
        Element4 = new javax.swing.JLabel();
        Element5 = new javax.swing.JLabel();
        ScoreLabel = new javax.swing.JLabel();
        ScoreUpdationLabel = new javax.swing.JLabel();
        MinusLabel1 = new javax.swing.JLabel();
        MinusLabel2 = new javax.swing.JLabel();
        MinusLabel3 = new javax.swing.JLabel();
        MinusLabel4 = new javax.swing.JLabel();
        MinusLabel5 = new javax.swing.JLabel();
        BackgroundImageLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 0, 0));
        jPanel1.setLayout(null);

        Histogram1.setBackground(new java.awt.Color(255, 102, 0));
        Histogram1.setForeground(new java.awt.Color(255, 255, 255));
        Histogram1.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram1Layout = new javax.swing.GroupLayout(Histogram1);
        Histogram1.setLayout(Histogram1Layout);
        Histogram1Layout.setHorizontalGroup(
            Histogram1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram1Layout.setVerticalGroup(
            Histogram1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram1);
        Histogram1.setBounds(640, 290, 23, 111);

        Histogram2.setBackground(new java.awt.Color(255, 102, 51));
        Histogram2.setForeground(new java.awt.Color(255, 255, 255));
        Histogram2.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram2Layout = new javax.swing.GroupLayout(Histogram2);
        Histogram2.setLayout(Histogram2Layout);
        Histogram2Layout.setHorizontalGroup(
            Histogram2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram2Layout.setVerticalGroup(
            Histogram2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram2);
        Histogram2.setBounds(670, 290, 23, 111);

        Histogram3.setBackground(new java.awt.Color(255, 204, 0));
        Histogram3.setForeground(new java.awt.Color(255, 255, 255));
        Histogram3.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram3Layout = new javax.swing.GroupLayout(Histogram3);
        Histogram3.setLayout(Histogram3Layout);
        Histogram3Layout.setHorizontalGroup(
            Histogram3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram3Layout.setVerticalGroup(
            Histogram3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram3);
        Histogram3.setBounds(700, 290, 23, 111);

        Histogram4.setBackground(new java.awt.Color(204, 255, 0));
        Histogram4.setForeground(new java.awt.Color(255, 255, 255));
        Histogram4.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram4Layout = new javax.swing.GroupLayout(Histogram4);
        Histogram4.setLayout(Histogram4Layout);
        Histogram4Layout.setHorizontalGroup(
            Histogram4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram4Layout.setVerticalGroup(
            Histogram4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram4);
        Histogram4.setBounds(730, 290, 23, 111);

        Histogram5.setBackground(new java.awt.Color(153, 255, 0));
        Histogram5.setForeground(new java.awt.Color(255, 255, 255));
        Histogram5.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram5Layout = new javax.swing.GroupLayout(Histogram5);
        Histogram5.setLayout(Histogram5Layout);
        Histogram5Layout.setHorizontalGroup(
            Histogram5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram5Layout.setVerticalGroup(
            Histogram5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram5);
        Histogram5.setBounds(760, 290, 23, 111);

        Histogram6.setBackground(new java.awt.Color(102, 255, 0));
        Histogram6.setForeground(new java.awt.Color(255, 255, 255));
        Histogram6.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram6Layout = new javax.swing.GroupLayout(Histogram6);
        Histogram6.setLayout(Histogram6Layout);
        Histogram6Layout.setHorizontalGroup(
            Histogram6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram6Layout.setVerticalGroup(
            Histogram6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram6);
        Histogram6.setBounds(790, 290, 23, 111);

        Histogram7.setBackground(new java.awt.Color(85, 255, 40));
        Histogram7.setForeground(new java.awt.Color(255, 255, 255));
        Histogram7.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram7Layout = new javax.swing.GroupLayout(Histogram7);
        Histogram7.setLayout(Histogram7Layout);
        Histogram7Layout.setHorizontalGroup(
            Histogram7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram7Layout.setVerticalGroup(
            Histogram7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram7);
        Histogram7.setBounds(820, 290, 23, 111);

        Histogram8.setBackground(new java.awt.Color(60, 255, 20));
        Histogram8.setForeground(new java.awt.Color(255, 255, 255));
        Histogram8.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram8Layout = new javax.swing.GroupLayout(Histogram8);
        Histogram8.setLayout(Histogram8Layout);
        Histogram8Layout.setHorizontalGroup(
            Histogram8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram8Layout.setVerticalGroup(
            Histogram8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram8);
        Histogram8.setBounds(850, 290, 23, 111);

        Histogram9.setBackground(new java.awt.Color(51, 255, 0));
        Histogram9.setForeground(new java.awt.Color(255, 255, 255));
        Histogram9.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram9Layout = new javax.swing.GroupLayout(Histogram9);
        Histogram9.setLayout(Histogram9Layout);
        Histogram9Layout.setHorizontalGroup(
            Histogram9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram9Layout.setVerticalGroup(
            Histogram9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram9);
        Histogram9.setBounds(880, 290, 23, 111);

        Histogram10.setBackground(new java.awt.Color(0, 204, 51));
        Histogram10.setForeground(new java.awt.Color(255, 255, 255));
        Histogram10.setPreferredSize(new java.awt.Dimension(118, 23));

        javax.swing.GroupLayout Histogram10Layout = new javax.swing.GroupLayout(Histogram10);
        Histogram10.setLayout(Histogram10Layout);
        Histogram10Layout.setHorizontalGroup(
            Histogram10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 23, Short.MAX_VALUE)
        );
        Histogram10Layout.setVerticalGroup(
            Histogram10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 111, Short.MAX_VALUE)
        );

        jPanel1.add(Histogram10);
        Histogram10.setBounds(910, 290, 23, 111);

        CheckButton.setBackground(new java.awt.Color(0, 153, 204));
        CheckButton.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        CheckButton.setText("Check");
        CheckButton.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        CheckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckButtonActionPerformed(evt);
            }
        });
        jPanel1.add(CheckButton);
        CheckButton.setBounds(700, 170, 114, 27);

        OutputLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        OutputLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        OutputLabel.setText("Status Histogram");
        OutputLabel.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(OutputLabel);
        OutputLabel.setBounds(660, 220, 200, 33);

        NumberLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        NumberLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NumberLabel.setText("Guess the number");
        NumberLabel.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.add(NumberLabel);
        NumberLabel.setBounds(660, 60, 180, 30);

        GuessedNumberTextField.setBackground(new java.awt.Color(0, 153, 204));
        GuessedNumberTextField.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        GuessedNumberTextField.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        GuessedNumberTextField.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        GuessedNumberTextField.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jPanel1.add(GuessedNumberTextField);
        GuessedNumberTextField.setBounds(700, 120, 114, 30);

        Element1.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        Element1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Element1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(Element1);
        Element1.setBounds(550, 370, 70, 30);

        Element2.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        Element2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Element2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(Element2);
        Element2.setBounds(550, 330, 70, 30);

        Element3.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        Element3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Element3.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(Element3);
        Element3.setBounds(550, 290, 70, 30);

        Element4.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        Element4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Element4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(Element4);
        Element4.setBounds(550, 250, 70, 30);

        Element5.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        Element5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Element5.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(Element5);
        Element5.setBounds(550, 210, 70, 30);

        ScoreLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 18)); // NOI18N
        ScoreLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ScoreLabel.setText("Score");
        jPanel1.add(ScoreLabel);
        ScoreLabel.setBounds(860, 60, 70, 30);

        ScoreUpdationLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        ScoreUpdationLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ScoreUpdationLabel.setText("100");
        jPanel1.add(ScoreUpdationLabel);
        ScoreUpdationLabel.setBounds(880, 100, 27, 21);

        MinusLabel1.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        MinusLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(MinusLabel1);
        MinusLabel1.setBounds(500, 370, 30, 20);

        MinusLabel2.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        MinusLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(MinusLabel2);
        MinusLabel2.setBounds(500, 340, 30, 20);

        MinusLabel3.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        MinusLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(MinusLabel3);
        MinusLabel3.setBounds(500, 300, 30, 20);

        MinusLabel4.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        MinusLabel4.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(MinusLabel4);
        MinusLabel4.setBounds(500, 260, 30, 20);

        MinusLabel5.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        MinusLabel5.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel1.add(MinusLabel5);
        MinusLabel5.setBounds(500, 220, 30, 20);

        BackgroundImageLabel.setFont(new java.awt.Font("Comic Sans MS", 1, 14)); // NOI18N
        BackgroundImageLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        BackgroundImageLabel.setIcon(new javax.swing.ImageIcon("C:\\Users\\Mr Sagar Kumar\\Downloads\\pngtree-bingo-game-game-gambling-number-photo-image_20856298.jpg")); // NOI18N
        jPanel1.add(BackgroundImageLabel);
        BackgroundImageLabel.setBounds(0, 0, 940, 440);

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 940, 420));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void CheckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckButtonActionPerformed
        String validStr = GuessedNumberTextField.getText().trim().replaceAll("[^0-9]", "");
        int valid = (validStr.length()==0)? -1 : Integer.parseInt(validStr);
        if(valid > 100 || valid < 0 || valid == -1 )
        {
            JOptionPane.showMessageDialog(null, (valid == -1 )? "Please Enter Valid Input" : "Please Enter input between 0-100");
             
            GuessedNumberTextField.setText("");
        }
        
        else
        {
            
        ++called;
        NumberLabel.setText("Guess The Number");
        int guessedNumber = Integer.parseInt(GuessedNumberTextField.getText());
        

        Histogram1.getParent().setLayout(null);
        Histogram2.getParent().setLayout(null);
        Histogram3.getParent().setLayout(null);
        Histogram4.getParent().setLayout(null);
        Histogram5.getParent().setLayout(null);
        Histogram6.getParent().setLayout(null);
        Histogram7.getParent().setLayout(null);
        Histogram8.getParent().setLayout(null);
        Histogram9.getParent().setLayout(null);
        Histogram10.getParent().setLayout(null);

        //        Too High
        if(guessedNumber>= random+10 &&  guessedNumber <= random + 15 || guessedNumber >random+15)
        {
            OutputLabel.setText("Too High");

            Histogram1.setSize( 23, 80);
            Histogram2.setSize(23 , 85);
            Histogram3.setSize(23 , 90);
            Histogram4.setSize(23 , 95);
            Histogram5.setSize(23 , 100);
            Histogram6.setSize(23 , 105);
            Histogram7.setSize(23 , 110);
            Histogram8.setSize(23 , 114);
            Histogram9.setSize(23 , 117);
            Histogram10.setSize(23 , 120);
        }
//    High
        else if(guessedNumber>= random+7 &&  guessedNumber <= random + 12 )
        {
            OutputLabel.setText("High");

            Histogram1.setSize( 23, 70);
            Histogram2.setSize(23 , 75);
            Histogram3.setSize(23 , 80);
            Histogram4.setSize(23 , 85);
            Histogram5.setSize(23 , 90);
            Histogram6.setSize(23 , 95);
            Histogram7.setSize(23 , 100);
            Histogram8.setSize(23 , 105);
            Histogram9.setSize(23 , 110);
            Histogram10.setSize(23 , 115);
        }

        //        Too Low
        else if(guessedNumber >= random - 15 && guessedNumber <= random -10 || guessedNumber <random-15)
        {
            OutputLabel.setText(" Too Low");
            Histogram1.setSize(23 , 35);
            Histogram2.setSize(23 , 40);
            Histogram3.setSize(23 , 45);
            Histogram4.setSize(23 , 50);
            Histogram5.setSize(23 , 55);
            Histogram6.setSize(23 , 60);
            Histogram7.setSize(23 , 65);
            Histogram8.setSize(23 , 70);
            Histogram9.setSize(23 , 75);
            Histogram10.setSize(23 , 80);
        }
        //        Low
        else if(guessedNumber >= random - 12 && guessedNumber <= random -7 )
        {
            OutputLabel.setText("Low");
            Histogram1.setSize(23 , 25);
            Histogram2.setSize(23 , 30);
            Histogram3.setSize(23 , 35);
            Histogram4.setSize(23 , 40);
            Histogram5.setSize(23 , 45);
            Histogram6.setSize(23 , 50);
            Histogram7.setSize(23 , 55);
            Histogram8.setSize(23 , 60);
            Histogram9.setSize(23 , 65);
            Histogram10.setSize(23 , 70);
        }
        //        close
        else if( (guessedNumber >= random + 5 && guessedNumber <=random +10) || guessedNumber>= random -10 &&  guessedNumber <= random - 5)
        {
            OutputLabel.setText("Close");
            Histogram1.setSize(23 , 54);
            Histogram2.setSize(23 , 57);
            Histogram3.setSize(23 , 60);
            Histogram4.setSize(23 , 63);
            Histogram5.setSize(23 , 65);
            Histogram6.setSize(23 , 68);
            Histogram7.setSize(23 , 71);
            Histogram8.setSize(23 , 74);
            Histogram9.setSize(23 , 77);
            Histogram10.setSize(23 , 80);
        }
        //      Very Close
        else if( (guessedNumber >= random + 1 && guessedNumber <=random + 4) || guessedNumber>= random -4 &&  guessedNumber <= random - 1)
        {
            OutputLabel.setText("Very Close");
            Histogram1.setSize(23 , 75);
            Histogram2.setSize(23 , 80);
            Histogram3.setSize(23 , 84);
            Histogram4.setSize(23 , 89);
            Histogram5.setSize(23 , 95);
            Histogram6.setSize(23 , 100);
            Histogram7.setSize(23 , 103);
            Histogram8.setSize(23 , 106);
            Histogram9.setSize(23 , 110);
            Histogram10.setSize(23 , 112);
        }
        //      Correct
        else if( guessedNumber == random )
        {
          

            OutputLabel.setText("Correct!");
            Histogram1.setSize(23, 118);
            Histogram2.setSize(23, 118);
            Histogram3.setSize(23, 118);
            Histogram4.setSize(23, 118);
            Histogram5.setSize(23, 118);
            Histogram6.setSize(23, 118);
            Histogram7.setSize(23, 118);
            Histogram8.setSize(23, 118);
            Histogram9.setSize(23, 118);
            Histogram10.setSize(23, 118);
            
           /*Asks for play again*/
                        /*Yes means 0 and no means 1 in confirm dialog box. if 0 == 1 || 0 than assgin the boolean value to the confirmation variable*/
           boolean confirmation =  0 == JOptionPane.showConfirmDialog(null, (Integer.parseInt(ScoreUpdationLabel.getText()) >= 40)? "Hurrah! You got " + ScoreUpdationLabel.getText().trim() + " Score. Do you wanna play again?": " Better Luck Next Time Dear! Do you wanna play again?");
                if(confirmation)
                {
                     called = 0;
                    this.dispose();
                    new Rough().setVisible(true);
                }
                else
                    this.dispose();
            
        }
         
        boolean correct = String.valueOf(random).equals(GuessedNumberTextField.getText().trim());
        
             if(called == 1 )
                {
                    Element1.setText(GuessedNumberTextField.getText());
                    MinusLabel1.setText((correct) ? "" : "-20");
                    ScoreUpdationLabel.setText((correct) ? "100":"80");
                }
             if(called == 2 )
             {
                 Element2.setText(GuessedNumberTextField.getText());
                 MinusLabel2.setText((correct)? "": "-20");
                 ScoreUpdationLabel.setText((correct) ? "80" : "60");
             }
             if(called == 3 ) 
             {
                 Element3.setText(GuessedNumberTextField.getText());
                 MinusLabel3.setText((correct) ? "": "-20");
                 ScoreUpdationLabel.setText((correct) ? "60" : "40");
                 
             }
             if(called == 4) 
             {
                 Element4.setText(GuessedNumberTextField.getText());
                 MinusLabel4.setText((correct) ? "" : "-20");
                 ScoreUpdationLabel.setText((correct) ? "40" : "20");
             }
             if(called == 5) 
             {
                   Element5.setText(GuessedNumberTextField.getText());
                   MinusLabel5.setText((correct) ? "" : "-20");
                   ScoreUpdationLabel.setText((correct) ? "20" : "0");
                   
                   /*Asks for play again*/
            boolean confirmation =  0 == JOptionPane.showConfirmDialog(null, (Integer.parseInt(ScoreUpdationLabel.getText())>40)? "Hurrah! You got " + ScoreUpdationLabel.getText().trim() + " Score. Do you wanna play again?": " Better Luck Next Time Dear! Do you wanna play again?");
                if(confirmation)
                {
                     called = 0;
                    this.dispose();
                    new Rough().setVisible(true);
                }
                else
                    this.dispose();
             }
                 
         
        
        GuessedNumberTextField.setText("");

        }
    }//GEN-LAST:event_CheckButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Rough.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Rough.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Rough.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Rough.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Rough().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel BackgroundImageLabel;
    private javax.swing.JButton CheckButton;
    private javax.swing.JLabel Element1;
    private javax.swing.JLabel Element2;
    private javax.swing.JLabel Element3;
    private javax.swing.JLabel Element4;
    private javax.swing.JLabel Element5;
    private javax.swing.JTextField GuessedNumberTextField;
    private javax.swing.JPanel Histogram1;
    private javax.swing.JPanel Histogram10;
    private javax.swing.JPanel Histogram2;
    private javax.swing.JPanel Histogram3;
    private javax.swing.JPanel Histogram4;
    private javax.swing.JPanel Histogram5;
    private javax.swing.JPanel Histogram6;
    private javax.swing.JPanel Histogram7;
    private javax.swing.JPanel Histogram8;
    private javax.swing.JPanel Histogram9;
    private javax.swing.JLabel MinusLabel1;
    private javax.swing.JLabel MinusLabel2;
    private javax.swing.JLabel MinusLabel3;
    private javax.swing.JLabel MinusLabel4;
    private javax.swing.JLabel MinusLabel5;
    private javax.swing.JLabel NumberLabel;
    private javax.swing.JLabel OutputLabel;
    private javax.swing.JLabel ScoreLabel;
    private javax.swing.JLabel ScoreUpdationLabel;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
